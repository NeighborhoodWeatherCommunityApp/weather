name: CI Pipeline

on:
  pull_request:
    branches:
      - dev

    paths:
      - back/src/main/**

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=sa" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=" >> $GITHUB_ENV

      # 환경변수 주입
      - name: Set yml value
        uses: microsoft/variable-substitution@v1
        with:
          files: "**/src/test/resources/application.yml, **/src/main/resources/application.yml"
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          api.weather.service-key: ${{ secrets.SHORT_TERM_FORECAST_API_KEY }}
          spring.jwt.key: ${{ secrets.JWT_KEY }}
          spring.sigs.key: ${{ secrets.CONSUMER_KEY }}
          spring.sigs.secret: ${{ secrets.CONSUMER_SECRET }}
          cloud.aws.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}
          spring.weather.key: ${{ secrets.METEOROLOGICAL_ADMIN_KEY }}
          spring.kakao.admin_key: ${{ secrets.KAKAO_SERVICE_ADMIN_KEY }}
          apple.client-id: ${{ secrets.CLIENT_ID }}
          apple.team-id: ${{ secrets.TEAM_ID }}
          apple.key.id: ${{ secrets.APPLE_KEY_ID }}
          apple.key.content: ${{ secrets.APPLE_KEY }}
          spring.profiles.active: ${{ secrets.PROFILE_TYPE }}

      - name: Grant execute permission for gradlew
        run: chmod +x back/gradlew

      - name: Build with Gradle Wrapper
        working-directory: back
        run: ./gradlew test -i

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ needs.test.result == 'success' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 권한
        run: chmod +x back/gradlew

      # 환경변수 주입
      - name: Set yml value
        uses: microsoft/variable-substitution@v1
        with:
          files: "**/src/main/resources/application.yml"
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          api.weather.service-key: ${{ secrets.SHORT_TERM_FORECAST_API_KEY }}
          spring.jwt.key: ${{ secrets.JWT_KEY }}
          spring.sigs.key: ${{ secrets.CONSUMER_KEY }}
          spring.sigs.secret: ${{ secrets.CONSUMER_SECRET }}
          cloud.aws.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}
          spring.weather.key: ${{ secrets.METEOROLOGICAL_ADMIN_KEY }}
          spring.kakao.admin_key: ${{ secrets.KAKAO_SERVICE_ADMIN_KEY }}
          apple.client-id: ${{ secrets.CLIENT_ID }}
          apple.team-id: ${{ secrets.TEAM_ID }}
          apple.key.id: ${{ secrets.APPLE_KEY_ID }}
          apple.key.content: ${{ secrets.APPLE_KEY }}
          spring.profiles.active: ${{ secrets.PROFILE_TYPE }}

      - name: Build
        working-directory: back
        run: ./gradlew build -x test -i

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/github-actions-demo ./back

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/github-actions-demo