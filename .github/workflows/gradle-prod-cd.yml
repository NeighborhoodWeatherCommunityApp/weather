name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - back/**

jobs:
  backend-docker-pull-and-run:
    runs-on: prod-self-hosted

    steps:
      - name: 최신 Docker 이미지를 pull
        run: |
          echo "Pulling new Docker image..."
          sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/neighborhood_weather_community_app

      - name: 현재 실행 중인 컨테이너 백업 (롤백 대비)
        run: |
          echo "Backing up running container..."
          if [ "$(sudo docker ps -q --filter 'name=neighborhood_weather_community_app')" ]; then
            sudo docker rename neighborhood_weather_community_app neighborhood_weather_community_app_backup
            sudo docker stop neighborhood_weather_community_app_backup
          fi

      - name: 새로운 Docker 컨테이너 실행
        run: |
          echo "Running new Docker container..."
          sudo docker run --name neighborhood_weather_community_app \
          -e TZ=Asia/Seoul \
          -v /etc/localtime:/etc/localtime:ro \
          -v /etc/timezone:/etc/timezone:ro \
          -d -p 8080:8080 \
          ${{ secrets.DOCKER_HUB_USERNAME }}/neighborhood_weather_community_app

      - name: 헬스 체크 수행
        run: |
          echo "Performing health check..."
          sleep 60  # 컨테이너가 완전히 시작될 때까지 대기
          if curl -f http://localhost:8080/health-check; then
            echo "Health check passed. Deployment successful."
          else
            echo "Health check failed. Rolling back to previous version..."
            sudo docker stop neighborhood_weather_community_app
            sudo docker rm neighborhood_weather_community_app
            sudo docker rename neighborhood_weather_community_app_backup neighborhood_weather_community_app
            sudo docker start neighborhood_weather_community_app
            exit 1  # 실패 상태로 GitHub Actions에 알림
          fi

      - name: 성공 시 이전 컨테이너 제거
        run: |
          echo "Cleaning up old backup container..."
          if [ "$(sudo docker ps -a -q --filter 'name=neighborhood_weather_community_app_backup')" ]; then
            sudo docker rm neighborhood_weather_community_app_backup
          fi

      - name: 사용하지 않는 Docker 이미지를 정리
        run: sudo docker system prune -f --volumes