name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - feat/**
      - fix/**
      - refactor/**
      - bug/**
      - config/**
    paths:
      - back/**

  push:
    branches:
      - dev
    paths:
      - back/**

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set yml value
        uses: microsoft/variable-substitution@v1
        with:
          token: ${{ secrets.CLOUDTYPE_TOKEN }}
          project: weather-dev/web-programing
          stage: main
          yaml: |
            name: weather
            app: java@17
            options:
              ports: "8080"
              healthz: /helath-check
              env: 
                - name: PROFILE_TYPE
                  value: dev
                - name: DB_URL
                  value: ${{ secrets.DB_DEV_URL }}
                - name: DB_USERNAME
                  value: ${{ secrets.DB_USERNAME }}
                - name: DB_PASSWORD
                  value: ${{ secrets.DB_PASSWORD }}
                - name: SHORT_TERM_FORECAST_API_KEY
                  value: ${{ secrets.SHORT_TERM_FORECAST_API_KEY }} 
                - name: JWT_KEY
                  value: ${{ secrets.JWT_KEY }}
                - name: CONSUMER_KEY
                  value: ${{ secrets.CONSUMER_KEY }}
                - name: CONSUMER_SECRET
                  value: ${{ secrets.CONSUMER_SECRET }}
                - name: S3_ACCESS_KEY
                  value: ${{ secrets.S3_ACCESS_KEY }}
                - name: S3_SECRET_KEY
                  value: ${{ secrets.S3_SECRET_KEY }}
                - name: METEOROLOGICAL_ADMIN_KEY
                  value: ${{ secrets.METEOROLOGICAL_ADMIN_KEY }}
                - name: KAKAO_SERVICE_ADMIN_KEY
                  value: ${{ secrets.KAKAO_SERVICE_ADMIN_KEY }}
                - name: CLIENT_ID
                  value: ${{ secrets.CLIENT_ID }}
                - name: TEAM_ID
                  value: ${{ secrets.TEAM_ID }}
                - name: APPLE_KEY_ID
                  value: ${{ secrets.APPLE_KEY_ID }}
                - name: APPLE_KEY
                  value: ${{ secrets.APPLE_KEY }}
              buildenv: []
              start: |
                mkdir -p ./customLog |
                echo "" > ./customLog/log |
                echo "" > ./customLog/err_log.log |
                chmod 666 ./customLog/log ./customLog/err_log.log |
                java -jar ./build/libs/weather-0.0.1-SNAPSHOT.jar
            context:
              git:
                url: git@github.com:${{ github.repository }}.git
                ref: ${{ github.ref }}
                branch: dev
                path: /back

      # 새로운 Docker 컨테이너를 실행
      - name: Run the new Docker container
        run: |
          sudo docker run --name neighborhood_weather_community_app \
          -e TZ=Asia/Seoul \
          -v /etc/localtime:/etc/localtime:ro \
          -v /etc/timezone:/etc/timezone:ro \
          --rm -d -p 8080:8080 \
          ${{ secrets.DOCKER_HUB_USERNAME }}/github-actions-demo

      # 사용하지 않는 Docker 이미지를 정리
      - name: Clean up unused Docker images
        run: sudo docker system prune -f --volumes