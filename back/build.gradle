plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.pknu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.hibernate:hibernate-validator:8.0.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-aop'        // aop
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2'

    testImplementation 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'com.mysql:mysql-connector-j'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2'
    implementation 'org.springframework.cloud:spring-cloud-commons'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Point
    implementation "org.hibernate:hibernate-spatial:6.5.0.Final"
    implementation "com.querydsl:querydsl-sql-spatial:5.1.0"

    //jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    //thumbnail
    implementation 'net.coobird:thumbnailator:0.4.20'

    //S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

    //proj4j
    implementation 'org.locationtech.proj4j:proj4j:1.3.0'
    implementation 'org.locationtech.proj4j:proj4j-epsg:1.3.0'


}
tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}